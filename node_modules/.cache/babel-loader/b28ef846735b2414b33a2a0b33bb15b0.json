{"ast":null,"code":"import _toConsumableArray from\"C:/Users/sudha/Desktop/NCSU/Junior Year NCSU/CSC 342/342-frontend-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:/Users/sudha/Desktop/NCSU/Junior Year NCSU/CSC 342/342-frontend-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/sudha/Desktop/NCSU/Junior Year NCSU/CSC 342/342-frontend-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/sudha/Desktop/NCSU/Junior Year NCSU/CSC 342/342-frontend-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'../styles/Watchlist.css';import Search from'./Search';import Sort from'./Sort';import Filter from'./Filter';import MovieWatchlist from'./MovieContainer';import{Container,Row,Col,Spinner}from'react-bootstrap';import{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Watchlist=function Watchlist(_ref){var user=_ref.user,movies=_ref.movies;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),watchlist=_useState4[0],setWatchlist=_useState4[1];// Calls fetchMovieData once when the component renders\nuseEffect(function(){// Fetches the movies for the database and the user's watchlist\nvar fetchMovieData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setLoading(true);_context.next=4;return axios.get(\"/users/\".concat(user.sub.substring(6),\"/watchlist\"));case 4:response=_context.sent;setWatchlist(response.data);setLoading(false);_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function fetchMovieData(){return _ref2.apply(this,arguments);};}();fetchMovieData();// eslint-disable-next-line\n},[]);// Render the spinner while the page is loading\nif(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-5 pt-5\",children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\",size:\"lg\",role:\"status\",style:{color:'#CC0000',width:'5rem',height:'5rem'}})});}return/*#__PURE__*/_jsx(Container,{fluid:true,className:\"watchlist-container\",children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{xs:2,id:\"filter-container\",children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Search,{movies:watchlist,setMovies:setWatchlist}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Sort,{movies:watchlist,setMovies:function setMovies(sortedMovies){return setWatchlist(_toConsumableArray(sortedMovies));}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Filter,{movies:watchlist,watchlist:null,setMovies:setWatchlist,setWatchlist:null})]}),/*#__PURE__*/_jsxs(Col,{xs:10,id:\"movie-container\",children:[/*#__PURE__*/_jsx(\"h1\",{id:\"watchlistTitle\",children:\"My Watchlist\"}),/*#__PURE__*/_jsx(MovieWatchlist,{movies:watchlist,watchlist:watchlist,setWatchlist:setWatchlist,user:user})]})]})});};export default Watchlist;","map":{"version":3,"sources":["C:/Users/sudha/Desktop/NCSU/Junior Year NCSU/CSC 342/342-frontend-2/src/components/Watchlist.js"],"names":["Search","Sort","Filter","MovieWatchlist","Container","Row","Col","Spinner","useState","useEffect","axios","Watchlist","user","movies","loading","setLoading","watchlist","setWatchlist","fetchMovieData","get","sub","substring","response","data","console","log","color","width","height","sortedMovies"],"mappings":"6uBAAA,MAAO,yBAAP,CACA,MAAOA,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,OAASC,SAAT,CAAoBC,GAApB,CAAyBC,GAAzB,CAA8BC,OAA9B,KAA6C,iBAA7C,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAoB,IAAlBC,CAAAA,IAAkB,MAAlBA,IAAkB,CAAZC,MAAY,MAAZA,MAAY,CAClC,cAA8BL,QAAQ,CAAC,KAAD,CAAtC,wCAAOM,OAAP,eAAgBC,UAAhB,eACA,eAAkCP,QAAQ,CAAC,EAAD,CAA1C,yCAAOQ,SAAP,eAAkBC,YAAlB,eAEA;AACAR,SAAS,CAAC,UAAM,CACZ;AACA,GAAMS,CAAAA,cAAc,2FAAG,gKAEfH,UAAU,CAAC,IAAD,CAAV,CAFe,sBAGQL,CAAAA,KAAK,CAACS,GAAN,kBAAoBP,IAAI,CAACQ,GAAL,CAASC,SAAT,CAAmB,CAAnB,CAApB,eAHR,QAGTC,QAHS,eAIfL,YAAY,CAACK,QAAQ,CAACC,IAAV,CAAZ,CACAR,UAAU,CAAC,KAAD,CAAV,CALe,+EAOfS,OAAO,CAACC,GAAR,cAPe,oEAAH,kBAAdP,CAAAA,cAAc,2CAApB,CAWAA,cAAc,GAAI;AACrB,CAdQ,CAcN,EAdM,CAAT,CAgBA;AACA,GAAIJ,OAAJ,CAAa,CACT,mBACI,YAAK,SAAS,CAAC,uBAAf,uBACI,KAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,CAA4B,IAAI,CAAC,IAAjC,CAAsC,IAAI,CAAC,QAA3C,CAAoD,KAAK,CAAE,CAAEY,KAAK,CAAE,SAAT,CAAoBC,KAAK,CAAE,MAA3B,CAAmCC,MAAM,CAAE,MAA3C,CAA3D,EADJ,EADJ,CAKH,CAED,mBACI,KAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,SAAS,CAAC,qBAA3B,uBACI,MAAC,GAAD,yBACI,MAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,EAAE,CAAC,kBAAf,wBACI,aADJ,cAEI,KAAC,MAAD,EAAQ,MAAM,CAAEZ,SAAhB,CAA2B,SAAS,CAAEC,YAAtC,EAFJ,cAGI,aAHJ,cAII,KAAC,IAAD,EAAM,MAAM,CAAED,SAAd,CAAyB,SAAS,CAAE,mBAAAa,YAAY,QAAIZ,CAAAA,YAAY,oBAAKY,YAAL,EAAhB,EAAhD,EAJJ,cAKI,aALJ,cAMI,KAAC,MAAD,EAAQ,MAAM,CAAEb,SAAhB,CAA2B,SAAS,CAAE,IAAtC,CAA4C,SAAS,CAAEC,YAAvD,CAAqE,YAAY,CAAE,IAAnF,EANJ,GADJ,cASI,MAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,EAAE,CAAC,iBAAhB,wBACI,WAAI,EAAE,CAAC,gBAAP,0BADJ,cAEI,KAAC,cAAD,EAAgB,MAAM,CAAED,SAAxB,CAAmC,SAAS,CAAEA,SAA9C,CAAyD,YAAY,CAAEC,YAAvE,CAAqF,IAAI,CAAEL,IAA3F,EAFJ,GATJ,GADJ,EADJ,CAkBH,CAhDD,CAkDA,cAAeD,CAAAA,SAAf","sourcesContent":["import '../styles/Watchlist.css';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\nimport Filter from './Filter';\r\nimport MovieWatchlist from './MovieContainer'\r\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Watchlist = ({user, movies}) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [watchlist, setWatchlist] = useState([]);\r\n\r\n    // Calls fetchMovieData once when the component renders\r\n    useEffect(() => {\r\n        // Fetches the movies for the database and the user's watchlist\r\n        const fetchMovieData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await axios.get(`/users/${user.sub.substring(6)}/watchlist`);\r\n                setWatchlist(response.data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n\r\n        fetchMovieData(); // eslint-disable-next-line\r\n    }, []);\r\n\r\n    // Render the spinner while the page is loading\r\n    if (loading) {\r\n        return (\r\n            <div className=\"text-center mt-5 pt-5\" >\r\n                <Spinner animation=\"border\" size=\"lg\" role=\"status\" style={{ color: '#CC0000', width: '5rem', height: '5rem' }}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"watchlist-container\">\r\n            <Row>\r\n                <Col xs={2} id=\"filter-container\">\r\n                    <br></br>\r\n                    <Search movies={watchlist} setMovies={setWatchlist}/>\r\n                    <br></br>\r\n                    <Sort movies={watchlist} setMovies={sortedMovies => setWatchlist([...sortedMovies])} />\r\n                    <br></br>\r\n                    <Filter movies={watchlist} watchlist={null} setMovies={setWatchlist} setWatchlist={null} />\r\n                </Col>\r\n                <Col xs={10} id=\"movie-container\">\r\n                    <h1 id='watchlistTitle'>My Watchlist</h1>\r\n                    <MovieWatchlist movies={watchlist} watchlist={watchlist} setWatchlist={setWatchlist} user={user} />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Watchlist;"]},"metadata":{},"sourceType":"module"}