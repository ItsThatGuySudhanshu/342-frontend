{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudha\\\\Desktop\\\\NCSU\\\\Junior Year NCSU\\\\CSC 342\\\\WEBAPPS-02\\\\client\\\\src\\\\components\\\\Filter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Accordion, AccordionSummary, Typography, AccordionDetails, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio, Divider, Slider } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Filter = ({\n  movies,\n  setMovies,\n  watchlist,\n  setWatchlist\n}) => {\n  _s();\n\n  const [database] = useState(movies);\n  const [radio, setRadio] = useState('Everything');\n  const [rating, setRating] = useState([0, 10]);\n  const [minimumRating, setMinimumRating] = useState(0); // handles updating the movies when any of the filters change\n\n  useEffect(() => {\n    const updateMovies = () => {\n      let filtered = [];\n\n      if (watchlist !== null && setWatchlist !== null) {\n        if (radio === 'Everything') {\n          filtered = database;\n        } else if (radio === 'InWatchlist') {\n          filtered = watchlist;\n        } else if (radio === 'NotInWatchlist') {\n          filtered = database.filter(movie => {\n            for (let i = 0; i < watchlist.length; i++) if (watchlist[i].id === movie.id) return false;\n\n            return true;\n          });\n        } else throw new Error('There was an error!');\n      } else {\n        filtered = database;\n      }\n\n      filtered = filtered.filter(movie => movie.vote_average >= rating[0] && movie.vote_average <= rating[1] && movie.vote_count >= minimumRating);\n      return filtered;\n    };\n\n    setMovies(updateMovies()); // eslint-disable-next-line   \n  }, [radio, rating, minimumRating]);\n\n  if (watchlist !== null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 37\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: '#CC0000'\n            },\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            focused: false,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: [\"Show Me\", /*#__PURE__*/_jsxDEV(RadioGroup, {\n                defaultValue: radio,\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"Everything\",\n                  onChange: e => setRadio(e.currentTarget.value),\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    color: \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 131\n                  }, this),\n                  label: \"Everything\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"InWatchlist\",\n                  onChange: e => setRadio(e.currentTarget.value),\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    color: \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 132\n                  }, this),\n                  label: \"In My Watchlist\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"NotInWatchlist\",\n                  onChange: e => setRadio(e.currentTarget.value),\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    color: \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 135\n                  }, this),\n                  label: \"Not In My Watchlist\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: [\"Rating\", /*#__PURE__*/_jsxDEV(Slider, {\n                style: {\n                  color: '#CC0000'\n                },\n                valueLabelDisplay: \"auto\",\n                value: rating,\n                onChange: (e, newRating) => setRating(newRating),\n                step: 1,\n                marks: true,\n                min: 0,\n                max: 10\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: [\"Minimum Number of Ratings\", /*#__PURE__*/_jsxDEV(Slider, {\n                style: {\n                  color: '#CC0000'\n                },\n                defaultValue: 0,\n                valueLabelDisplay: \"auto\",\n                value: minimumRating,\n                onChange: (e, newMinimumRating) => setMinimumRating(newMinimumRating),\n                step: 50,\n                marks: true,\n                min: 0,\n                max: 500\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 37\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: '#CC0000'\n            },\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            focused: false,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: [\"Rating\", /*#__PURE__*/_jsxDEV(Slider, {\n                style: {\n                  color: '#CC0000'\n                },\n                valueLabelDisplay: \"auto\",\n                value: rating,\n                onChange: (e, newRating) => setRating(newRating),\n                step: 1,\n                marks: true,\n                min: 0,\n                max: 10\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: [\"Minimum Number of Ratings\", /*#__PURE__*/_jsxDEV(Slider, {\n                style: {\n                  color: '#CC0000'\n                },\n                defaultValue: 0,\n                valueLabelDisplay: \"auto\",\n                value: minimumRating,\n                onChange: (e, newMinimumRating) => setMinimumRating(newMinimumRating),\n                step: 50,\n                marks: true,\n                min: 0,\n                max: 500\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(Filter, \"U4KTRX7ZBVrzQUNNb5cOyws5D84=\");\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["C:/Users/sudha/Desktop/NCSU/Junior Year NCSU/CSC 342/WEBAPPS-02/client/src/components/Filter.js"],"names":["React","useEffect","useState","Accordion","AccordionSummary","Typography","AccordionDetails","FormControl","FormLabel","RadioGroup","FormControlLabel","Radio","Divider","Slider","ExpandMoreIcon","Filter","movies","setMovies","watchlist","setWatchlist","database","radio","setRadio","rating","setRating","minimumRating","setMinimumRating","updateMovies","filtered","filter","movie","i","length","id","Error","vote_average","vote_count","color","e","currentTarget","value","newRating","newMinimumRating"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,gBAApB,EAAsCC,UAAtC,EAAkDC,gBAAlD,EAAoEC,WAApE,EAAiFC,SAAjF,EAA4FC,UAA5F,EAAwGC,gBAAxG,EAA0HC,KAA1H,EAAiIC,OAAjI,EAA0IC,MAA1I,QAAwJ,eAAxJ;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,SAAT;AAAoBC,EAAAA,SAApB;AAA+BC,EAAAA;AAA/B,CAAD,KAAkD;AAAA;;AAC7D,QAAM,CAACC,QAAD,IAAalB,QAAQ,CAACc,MAAD,CAA3B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,YAAD,CAAlC;AACA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,CAAC,CAAD,EAAI,EAAJ,CAAD,CAApC;AACA,QAAM,CAACuB,aAAD,EAAgBC,gBAAhB,IAAoCxB,QAAQ,CAAC,CAAD,CAAlD,CAJ6D,CAM7D;;AACAD,EAAAA,SAAS,CACL,MAAM;AACF,UAAM0B,YAAY,GAAG,MAAM;AACvB,UAAIC,QAAQ,GAAG,EAAf;;AACA,UAAIV,SAAS,KAAK,IAAd,IAAsBC,YAAY,KAAK,IAA3C,EAAiD;AAC7C,YAAIE,KAAK,KAAK,YAAd,EAA4B;AACxBO,UAAAA,QAAQ,GAAGR,QAAX;AACH,SAFD,MAEO,IAAIC,KAAK,KAAK,aAAd,EAA6B;AAChCO,UAAAA,QAAQ,GAAGV,SAAX;AACH,SAFM,MAEA,IAAIG,KAAK,KAAK,gBAAd,EAAgC;AACnCO,UAAAA,QAAQ,GAAGR,QAAQ,CAACS,MAAT,CAAgBC,KAAK,IAAI;AAChC,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,SAAS,CAACc,MAA9B,EAAsCD,CAAC,EAAvC,EACI,IAAIb,SAAS,CAACa,CAAD,CAAT,CAAaE,EAAb,KAAoBH,KAAK,CAACG,EAA9B,EAAkC,OAAO,KAAP;;AACtC,mBAAO,IAAP;AACH,WAJU,CAAX;AAKH,SANM,MAOH,MAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACP,OAbD,MAcK;AACDN,QAAAA,QAAQ,GAAGR,QAAX;AACH;;AAEDQ,MAAAA,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgBC,KAAK,IAAKA,KAAK,CAACK,YAAN,IAAsBZ,MAAM,CAAC,CAAD,CAA5B,IAAmCO,KAAK,CAACK,YAAN,IAAsBZ,MAAM,CAAC,CAAD,CAA/D,IAAsEO,KAAK,CAACM,UAAN,IAAoBX,aAApH,CAAX;AAEA,aAAOG,QAAP;AACH,KAvBD;;AAyBAX,IAAAA,SAAS,CAACU,YAAY,EAAb,CAAT,CA1BE,CA0ByB;AAC9B,GA5BI,EA4BF,CAACN,KAAD,EAAQE,MAAR,EAAgBE,aAAhB,CA5BE,CAAT;;AA+BA,MAAIP,SAAS,KAAK,IAAlB,EAAwB;AACpB,wBACI;AAAA,6BACI,QAAC,SAAD;AAAA,gCACI,QAAC,gBAAD;AACI,UAAA,UAAU,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBADhB;AAAA,iCAGA,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAAEmB,cAAAA,KAAK,EAAE;AAAT,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI,QAAC,gBAAD;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEI,QAAC,WAAD;AACI,YAAA,SAAS,EAAC,UADd;AAEI,YAAA,OAAO,EAAE,KAFb;AAAA,oCAII,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,QAArB;AAAA,iDACI,QAAC,UAAD;AAAY,gBAAA,YAAY,EAAEhB,KAA1B;AAAA,wCACI,QAAC,gBAAD;AAAkB,kBAAA,KAAK,EAAC,YAAxB;AAAqC,kBAAA,QAAQ,EAAEiB,CAAC,IAAIhB,QAAQ,CAACgB,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAA5D;AAAqF,kBAAA,OAAO,eAAE,QAAC,KAAD;AAAO,oBAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,0BAA9F;AAAsH,kBAAA,KAAK,EAAC;AAA5H;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,gBAAD;AAAkB,kBAAA,KAAK,EAAC,aAAxB;AAAsC,kBAAA,QAAQ,EAAEF,CAAC,IAAIhB,QAAQ,CAACgB,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAA7D;AAAsF,kBAAA,OAAO,eAAE,QAAC,KAAD;AAAO,oBAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,0BAA/F;AAAuH,kBAAA,KAAK,EAAC;AAA7H;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI,QAAC,gBAAD;AAAkB,kBAAA,KAAK,EAAC,gBAAxB;AAAyC,kBAAA,QAAQ,EAAEF,CAAC,IAAIhB,QAAQ,CAACgB,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAhE;AAAyF,kBAAA,OAAO,eAAE,QAAC,KAAD;AAAO,oBAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,0BAAlG;AAA0H,kBAAA,KAAK,EAAC;AAAhI;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAWI;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAYI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAZJ,eAaI;AAAA;AAAA;AAAA;AAAA,oBAbJ,eAcI,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,QAArB;AAAA,gDACI,QAAC,MAAD;AACI,gBAAA,KAAK,EAAE;AAACH,kBAAAA,KAAK,EAAE;AAAR,iBADX;AAEI,gBAAA,iBAAiB,EAAC,MAFtB;AAGI,gBAAA,KAAK,EAAEd,MAHX;AAII,gBAAA,QAAQ,EAAE,CAACe,CAAD,EAAIG,SAAJ,KAAkBjB,SAAS,CAACiB,SAAD,CAJzC;AAKI,gBAAA,IAAI,EAAE,CALV;AAMI,gBAAA,KAAK,MANT;AAOI,gBAAA,GAAG,EAAE,CAPT;AAQI,gBAAA,GAAG,EAAE;AART;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdJ,eA0BI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBA1BJ,eA2BI;AAAA;AAAA;AAAA;AAAA,oBA3BJ,eA4BI,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,QAArB;AAAA,mEACI,QAAC,MAAD;AACI,gBAAA,KAAK,EAAE;AAACJ,kBAAAA,KAAK,EAAE;AAAR,iBADX;AAEI,gBAAA,YAAY,EAAE,CAFlB;AAGI,gBAAA,iBAAiB,EAAC,MAHtB;AAII,gBAAA,KAAK,EAAEZ,aAJX;AAKI,gBAAA,QAAQ,EAAE,CAACa,CAAD,EAAII,gBAAJ,KAAyBhB,gBAAgB,CAACgB,gBAAD,CALvD;AAMI,gBAAA,IAAI,EAAE,EANV;AAOI,gBAAA,KAAK,MAPT;AAQI,gBAAA,GAAG,EAAE,CART;AASI,gBAAA,GAAG,EAAE;AATT;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAyDH,GA1DD,MA2DK;AACD,wBACI;AAAA,6BACI,QAAC,SAAD;AAAA,gCACI,QAAC,gBAAD;AACI,UAAA,UAAU,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBADhB;AAAA,iCAGA,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAAEL,cAAAA,KAAK,EAAE;AAAT,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI,QAAC,gBAAD;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEI,QAAC,WAAD;AACI,YAAA,SAAS,EAAC,UADd;AAEI,YAAA,OAAO,EAAE,KAFb;AAAA,oCAII,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,QAArB;AAAA,gDACI,QAAC,MAAD;AACI,gBAAA,KAAK,EAAE;AAACA,kBAAAA,KAAK,EAAE;AAAR,iBADX;AAEI,gBAAA,iBAAiB,EAAC,MAFtB;AAGI,gBAAA,KAAK,EAAEd,MAHX;AAII,gBAAA,QAAQ,EAAE,CAACe,CAAD,EAAIG,SAAJ,KAAkBjB,SAAS,CAACiB,SAAD,CAJzC;AAKI,gBAAA,IAAI,EAAE,CALV;AAMI,gBAAA,KAAK,MANT;AAOI,gBAAA,GAAG,EAAE,CAPT;AAQI,gBAAA,GAAG,EAAE;AART;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAgBI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAhBJ,eAiBI;AAAA;AAAA;AAAA;AAAA,oBAjBJ,eAkBI,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,QAArB;AAAA,mEACI,QAAC,MAAD;AACI,gBAAA,KAAK,EAAE;AAACJ,kBAAAA,KAAK,EAAE;AAAR,iBADX;AAEI,gBAAA,YAAY,EAAE,CAFlB;AAGI,gBAAA,iBAAiB,EAAC,MAHtB;AAII,gBAAA,KAAK,EAAEZ,aAJX;AAKI,gBAAA,QAAQ,EAAE,CAACa,CAAD,EAAII,gBAAJ,KAAyBhB,gBAAgB,CAACgB,gBAAD,CALvD;AAMI,gBAAA,IAAI,EAAE,EANV;AAOI,gBAAA,KAAK,MAPT;AAQI,gBAAA,GAAG,EAAE,CART;AASI,gBAAA,GAAG,EAAE;AATT;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AA+CH;AACJ,CAlJD;;GAAM3B,M;;KAAAA,M;AAoJN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Accordion, AccordionSummary, Typography, AccordionDetails, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio, Divider, Slider } from '@mui/material';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nconst Filter = ({movies, setMovies, watchlist, setWatchlist}) => {\r\n    const [database] = useState(movies);\r\n    const [radio, setRadio] = useState('Everything');\r\n    const [rating, setRating] = useState([0, 10]);\r\n    const [minimumRating, setMinimumRating] = useState(0);\r\n\r\n    // handles updating the movies when any of the filters change\r\n    useEffect(\r\n        () => {\r\n            const updateMovies = () => {\r\n                let filtered = [];\r\n                if (watchlist !== null && setWatchlist !== null) {\r\n                    if (radio === 'Everything') {\r\n                        filtered = database;\r\n                    } else if (radio === 'InWatchlist') {\r\n                        filtered = watchlist;\r\n                    } else if (radio === 'NotInWatchlist') {\r\n                        filtered = database.filter(movie => {\r\n                            for (let i = 0; i < watchlist.length; i++) \r\n                                if (watchlist[i].id === movie.id) return false;\r\n                            return true;\r\n                        });\r\n                    } else \r\n                        throw new Error('There was an error!');\r\n                }\r\n                else {\r\n                    filtered = database;\r\n                }\r\n\r\n                filtered = filtered.filter(movie => (movie.vote_average >= rating[0] && movie.vote_average <= rating[1] && movie.vote_count >= minimumRating));\r\n\r\n                return filtered;\r\n            }\r\n\r\n            setMovies(updateMovies()); // eslint-disable-next-line   \r\n        }, [radio, rating, minimumRating]);\r\n\r\n    \r\n    if (watchlist !== null) {\r\n        return (\r\n            <>\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                    <Typography style={{ color: '#CC0000'}}>Filters</Typography>\r\n                    </AccordionSummary>\r\n                    <Divider />\r\n                    <AccordionDetails>\r\n                    <br/>\r\n                        <FormControl \r\n                            component=\"fieldset\" \r\n                            focused={false}\r\n                        >\r\n                            <FormLabel component=\"legend\">Show Me\r\n                                <RadioGroup defaultValue={radio}>\r\n                                    <FormControlLabel value=\"Everything\" onChange={e => setRadio(e.currentTarget.value)} control={<Radio color=\"error\"/>} label=\"Everything\" />\r\n                                    <FormControlLabel value=\"InWatchlist\" onChange={e => setRadio(e.currentTarget.value)} control={<Radio color=\"error\"/>} label=\"In My Watchlist\" />\r\n                                    <FormControlLabel value=\"NotInWatchlist\" onChange={e => setRadio(e.currentTarget.value)} control={<Radio color=\"error\"/>} label=\"Not In My Watchlist\" />\r\n                                </RadioGroup>\r\n                            </FormLabel>\r\n                            <br/>\r\n                            <Divider />\r\n                            <br/>\r\n                            <FormLabel component=\"legend\">Rating\r\n                                <Slider\r\n                                    style={{color: '#CC0000'}}\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    value={rating}\r\n                                    onChange={(e, newRating) => setRating(newRating)}\r\n                                    step={1}\r\n                                    marks\r\n                                    min={0}\r\n                                    max={10}\r\n                                />\r\n                            </FormLabel>\r\n                            <Divider />\r\n                            <br/>\r\n                            <FormLabel component=\"legend\">Minimum Number of Ratings\r\n                                <Slider\r\n                                    style={{color: '#CC0000'}}\r\n                                    defaultValue={0}\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    value={minimumRating}\r\n                                    onChange={(e, newMinimumRating) => setMinimumRating(newMinimumRating)}\r\n                                    step={50}\r\n                                    marks\r\n                                    min={0}\r\n                                    max={500}\r\n                                />\r\n                            </FormLabel>\r\n                        </FormControl>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                    <Typography style={{ color: '#CC0000'}}>Filters</Typography>\r\n                    </AccordionSummary>\r\n                    <Divider />\r\n                    <AccordionDetails>\r\n                    <br/>\r\n                        <FormControl \r\n                            component=\"fieldset\" \r\n                            focused={false}\r\n                        >\r\n                            <FormLabel component=\"legend\">Rating\r\n                                <Slider\r\n                                    style={{color: '#CC0000'}}\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    value={rating}\r\n                                    onChange={(e, newRating) => setRating(newRating)}\r\n                                    step={1}\r\n                                    marks\r\n                                    min={0}\r\n                                    max={10}\r\n                                />\r\n                            </FormLabel>\r\n                            <Divider />\r\n                            <br/>\r\n                            <FormLabel component=\"legend\">Minimum Number of Ratings\r\n                                <Slider\r\n                                    style={{color: '#CC0000'}}\r\n                                    defaultValue={0}\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    value={minimumRating}\r\n                                    onChange={(e, newMinimumRating) => setMinimumRating(newMinimumRating)}\r\n                                    step={50}\r\n                                    marks\r\n                                    min={0}\r\n                                    max={500}\r\n                                />\r\n                            </FormLabel>\r\n                        </FormControl>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filter;\r\n"]},"metadata":{},"sourceType":"module"}