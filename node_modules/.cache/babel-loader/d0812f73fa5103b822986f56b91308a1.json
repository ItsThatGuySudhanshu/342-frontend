{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudha\\\\Desktop\\\\NCSU\\\\Junior Year NCSU\\\\CSC 342\\\\WEBAPPS-02\\\\client\\\\src\\\\components\\\\Filter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Accordion, AccordionSummary, Typography, AccordionDetails, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio, Divider, Slider } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Filter = ({\n  movies,\n  setMovies,\n  watchlist,\n  setWatchlist\n}) => {\n  _s();\n\n  const [database] = useState(movies);\n  const [radio, setRadio] = useState('Everything');\n  const [rating, setRating] = useState([0, 10]);\n  const [minimumRating, setMinimumRating] = useState(500);\n  const [runtime, setRuntime] = useState([0, 400]); // handles updating the movies when any of the filters change\n\n  useEffect(() => {\n    const updateMovies = () => {\n      let filtered = [];\n      if (radio === 'Everything') filtered = database;else if (radio === 'InWatchlist') filtered = watchlist;else if (radio === 'NotInWatchlist') {\n        filtered = database.filter(movie => {\n          for (let i = 0; i < watchlist.length; i++) if (watchlist[i].id === movie.id) return false;\n\n          return true;\n        });\n      } else throw new Error('There was an error!');\n      filtered = filtered.filter(movie => movie.vote_average >= rating[0] && movie.vote_average <= rating[1] && movie.vote_count >= minimumRating);\n      return filtered;\n    };\n\n    setMovies(updateMovies());\n  }, [radio, rating, minimumRating, runtime]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: '#CC0000'\n          },\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          focused: false,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: [\"Show Me\", /*#__PURE__*/_jsxDEV(RadioGroup, {\n              defaultValue: radio,\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"Everything\",\n                onChange: e => setRadio(e.currentTarget.value),\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  color: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 127\n                }, this),\n                label: \"Everything\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"InWatchlist\",\n                onChange: e => setRadio(e.currentTarget.value),\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  color: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 128\n                }, this),\n                label: \"In My Watchlist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"NotInWatchlist\",\n                onChange: e => setRadio(e.currentTarget.value),\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  color: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 131\n                }, this),\n                label: \"Not In My Watchlist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: [\"Rating\", /*#__PURE__*/_jsxDEV(Slider, {\n              style: {\n                color: '#CC0000'\n              },\n              valueLabelDisplay: \"auto\",\n              value: rating,\n              onChange: (e, newRating) => setRating(newRating),\n              step: 1,\n              marks: true,\n              min: 0,\n              max: 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: [\"Minimum Number of Ratings\", /*#__PURE__*/_jsxDEV(Slider, {\n              style: {\n                color: '#CC0000'\n              },\n              defaultValue: 0,\n              valueLabelDisplay: \"auto\",\n              value: minimumRating,\n              onChange: (e, newMinimumRating) => setMinimumRating(newMinimumRating),\n              step: 50,\n              marks: true,\n              min: 0,\n              max: 500\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Filter, \"axx0H2YpzoA2ECuZ7e3B+hZHCw0=\");\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["C:/Users/sudha/Desktop/NCSU/Junior Year NCSU/CSC 342/WEBAPPS-02/client/src/components/Filter.js"],"names":["React","useEffect","useState","Accordion","AccordionSummary","Typography","AccordionDetails","FormControl","FormLabel","RadioGroup","FormControlLabel","Radio","Divider","Slider","ExpandMoreIcon","Filter","movies","setMovies","watchlist","setWatchlist","database","radio","setRadio","rating","setRating","minimumRating","setMinimumRating","runtime","setRuntime","updateMovies","filtered","filter","movie","i","length","id","Error","vote_average","vote_count","color","e","currentTarget","value","newRating","newMinimumRating"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Accordion, AccordionSummary, Typography, AccordionDetails, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio, Divider, Slider } from '@mui/material';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nconst Filter = ({movies, setMovies, watchlist, setWatchlist}) => {\r\n    const [database] = useState(movies);\r\n    const [radio, setRadio] = useState('Everything');\r\n    const [rating, setRating] = useState([0, 10]);\r\n    const [minimumRating, setMinimumRating] = useState(500);\r\n    const [runtime, setRuntime] = useState([0, 400]);\r\n\r\n    // handles updating the movies when any of the filters change\r\n    useEffect(\r\n        () => {\r\n            const updateMovies = () => {\r\n                let filtered = [];\r\n                if (radio === 'Everything') \r\n                    filtered = database;\r\n                else if (radio === 'InWatchlist') \r\n                    filtered = watchlist;\r\n                else if (radio === 'NotInWatchlist') {\r\n                    filtered = database.filter(movie => {\r\n                        for (let i = 0; i < watchlist.length; i++) \r\n                            if (watchlist[i].id === movie.id) return false;\r\n                        return true;\r\n                    });\r\n                } else \r\n                    throw new Error('There was an error!');\r\n                    \r\n                filtered = filtered.filter(movie => (movie.vote_average >= rating[0] && movie.vote_average <= rating[1] && movie.vote_count >= minimumRating));\r\n\r\n                return filtered;\r\n            }\r\n\r\n            setMovies(updateMovies());        \r\n        }, [radio, rating, minimumRating, runtime]);\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                >\r\n                <Typography style={{ color: '#CC0000'}}>Filters</Typography>\r\n                </AccordionSummary>\r\n                <Divider />\r\n                <AccordionDetails>\r\n                <br/>\r\n                    <FormControl \r\n                        component=\"fieldset\" \r\n                        focused={false}\r\n                    >\r\n                        <FormLabel component=\"legend\">Show Me\r\n                            <RadioGroup defaultValue={radio}>\r\n                                <FormControlLabel value=\"Everything\" onChange={e => setRadio(e.currentTarget.value)} control={<Radio color=\"error\"/>} label=\"Everything\" />\r\n                                <FormControlLabel value=\"InWatchlist\" onChange={e => setRadio(e.currentTarget.value)} control={<Radio color=\"error\"/>} label=\"In My Watchlist\" />\r\n                                <FormControlLabel value=\"NotInWatchlist\" onChange={e => setRadio(e.currentTarget.value)} control={<Radio color=\"error\"/>} label=\"Not In My Watchlist\" />\r\n                            </RadioGroup>\r\n                        </FormLabel>\r\n                        <br/>\r\n                        <Divider />\r\n                        <br/>\r\n                        <FormLabel component=\"legend\">Rating\r\n                            <Slider\r\n                                style={{color: '#CC0000'}}\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={rating}\r\n                                onChange={(e, newRating) => setRating(newRating)}\r\n                                step={1}\r\n                                marks\r\n                                min={0}\r\n                                max={10}\r\n                            />\r\n                        </FormLabel>\r\n                        <Divider />\r\n                        <br/>\r\n                        <FormLabel component=\"legend\">Minimum Number of Ratings\r\n                            <Slider\r\n                                style={{color: '#CC0000'}}\r\n                                defaultValue={0}\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={minimumRating}\r\n                                onChange={(e, newMinimumRating) => setMinimumRating(newMinimumRating)}\r\n                                step={50}\r\n                                marks\r\n                                min={0}\r\n                                max={500}\r\n                            />\r\n                        </FormLabel>\r\n                    </FormControl>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n"]},"metadata":{},"sourceType":"module"}