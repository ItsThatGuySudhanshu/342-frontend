{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudha\\\\Desktop\\\\NCSU\\\\Junior Year NCSU\\\\CSC 342\\\\WEBAPPS-02\\\\client\\\\src\\\\components\\\\MovieCard.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/MovieCard.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n\nconst MovieCard = ({\n  user,\n  watchlist,\n  movies,\n  setWatchlist,\n  id,\n  title,\n  poster_path,\n  overview,\n  vote_average,\n  vote_count,\n  release_date\n}) => {\n  _s();\n\n  const [buttonText, setButtonText] = useState('+');\n  const [inWatchlist, setInWatchlist] = useState(false);\n  useEffect(() => {\n    // checks if the movie is in the user's watchlist\n    const isMovieInWatchlist = () => {\n      const result = watchlist.filter(movie => movie.id === id);\n\n      if (result.length > 0 || inWatchlist) {\n        setButtonText('-');\n        setInWatchlist(true);\n      } else {\n        setButtonText('+');\n        setInWatchlist(false);\n      }\n    };\n\n    isMovieInWatchlist(); // eslint-disable-next-line\n  }, [watchlist, movies]); // Adds a movie to the user's watchlist\n\n  const addMovieToWatchlist = async () => {\n    let movie;\n\n    try {\n      movie = await axios.post(`/users/${user.sub.substring(6)}/watchlist/add`, {\n        id,\n        title,\n        poster_path,\n        overview,\n        vote_average,\n        vote_count,\n        release_date\n      });\n      setButtonText('-');\n      setInWatchlist(true);\n      setWatchlist([...watchlist, movie]);\n    } catch (err) {\n      console.log(err);\n    }\n  }; // Deletes a movie from the user's watchlist\n\n\n  const removeMovieFromWatchlist = async () => {\n    try {\n      await axios.delete(`/users/${user.sub.substring(6)}/watchlist/remove`, {\n        data: {\n          id,\n          title,\n          poster_path,\n          overview,\n          vote_average,\n          vote_count,\n          release_date\n        }\n      });\n      const filteredMovies = watchlist.filter(movie => movie.id !== id);\n      setButtonText('+');\n      setInWatchlist(false);\n      setWatchlist(filteredMovies);\n    } catch (err) {\n      console.log(err);\n    }\n  }; // displays the vote average\n\n\n  const displayVoteAverage = vote_average => {\n    if (vote_average >= 7.5) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '1.5rem',\n          padding: '5px',\n          color: 'green',\n          border: '1px solid black'\n        },\n        children: vote_average\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }, this);\n    } else if (vote_average < 7.5 && vote_average >= 5) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '1.5rem',\n          padding: '5px',\n          color: 'orange',\n          border: '1px solid black'\n        },\n        children: vote_average\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '1.5rem',\n          padding: '5px',\n          color: 'red',\n          border: '1px solid black'\n        },\n        children: vote_average\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 20\n      }, this);\n    }\n  }; // determines if a movie is currently in the watchlist\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"movie\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"movie-img\",\n      src: IMG_API + poster_path,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"movie-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          paddingTop: '0.5rem'\n        },\n        children: [new Date(release_date).toLocaleString('en-us', {\n          timeZone: 'UTC',\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        }), displayVoteAverage(vote_average)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: inWatchlist ? removeMovieFromWatchlist : addMovieToWatchlist,\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieCard, \"7T0zTx3KFjL9ApWshtFYIwbIyI8=\");\n\n_c = MovieCard;\nexport default MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["C:/Users/sudha/Desktop/NCSU/Junior Year NCSU/CSC 342/WEBAPPS-02/client/src/components/MovieCard.js"],"names":["React","useState","useEffect","axios","Button","IMG_API","MovieCard","user","watchlist","movies","setWatchlist","id","title","poster_path","overview","vote_average","vote_count","release_date","buttonText","setButtonText","inWatchlist","setInWatchlist","isMovieInWatchlist","result","filter","movie","length","addMovieToWatchlist","post","sub","substring","err","console","log","removeMovieFromWatchlist","delete","data","filteredMovies","displayVoteAverage","marginLeft","padding","color","border","paddingTop","Date","toLocaleString","timeZone","year","month","day"],"mappings":";;;AAAA,OAAO,yBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,SAAP;AAAkBC,EAAAA,MAAlB;AAA0BC,EAAAA,YAA1B;AAAwCC,EAAAA,EAAxC;AAA4CC,EAAAA,KAA5C;AAAmDC,EAAAA,WAAnD;AAAgEC,EAAAA,QAAhE;AAA0EC,EAAAA,YAA1E;AAAwFC,EAAAA,UAAxF;AAAoGC,EAAAA;AAApG,CAAD,KAAuH;AAAA;;AACrI,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,GAAD,CAA5C;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,KAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMoB,kBAAkB,GAAG,MAAM;AAC7B,YAAMC,MAAM,GAAGf,SAAS,CAACgB,MAAV,CAAiBC,KAAK,IAAKA,KAAK,CAACd,EAAN,KAAaA,EAAxC,CAAf;;AACA,UAAIY,MAAM,CAACG,MAAP,GAAgB,CAAhB,IAAqBN,WAAzB,EAAsC;AAClCD,QAAAA,aAAa,CAAC,GAAD,CAAb;AACAE,QAAAA,cAAc,CAAC,IAAD,CAAd;AACH,OAHD,MAGO;AACHF,QAAAA,aAAa,CAAC,GAAD,CAAb;AACAE,QAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,KATD;;AAWAC,IAAAA,kBAAkB,GAbN,CAaU;AACzB,GAdQ,EAcN,CAACd,SAAD,EAAYC,MAAZ,CAdM,CAAT,CAJqI,CAoBtI;;AACC,QAAMkB,mBAAmB,GAAG,YAAY;AACpC,QAAIF,KAAJ;;AACA,QAAI;AACAA,MAAAA,KAAK,GAAG,MAAMtB,KAAK,CAACyB,IAAN,CAAY,UAASrB,IAAI,CAACsB,GAAL,CAASC,SAAT,CAAmB,CAAnB,CAAsB,gBAA3C,EAA4D;AACtEnB,QAAAA,EADsE;AAEtEC,QAAAA,KAFsE;AAGtEC,QAAAA,WAHsE;AAItEC,QAAAA,QAJsE;AAKtEC,QAAAA,YALsE;AAMtEC,QAAAA,UANsE;AAOtEC,QAAAA;AAPsE,OAA5D,CAAd;AASAE,MAAAA,aAAa,CAAC,GAAD,CAAb;AACAE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAX,MAAAA,YAAY,CAAC,CAAC,GAAGF,SAAJ,EAAeiB,KAAf,CAAD,CAAZ;AACH,KAbD,CAaE,OAAOM,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAlBD,CArBqI,CAyCrI;;;AACA,QAAMG,wBAAwB,GAAG,YAAY;AACzC,QAAI;AACA,YAAM/B,KAAK,CAACgC,MAAN,CAAc,UAAS5B,IAAI,CAACsB,GAAL,CAASC,SAAT,CAAmB,CAAnB,CAAsB,mBAA7C,EAAiE;AACnEM,QAAAA,IAAI,EAAE;AACFzB,UAAAA,EADE;AAEFC,UAAAA,KAFE;AAGFC,UAAAA,WAHE;AAIFC,UAAAA,QAJE;AAKFC,UAAAA,YALE;AAMFC,UAAAA,UANE;AAOFC,UAAAA;AAPE;AAD6D,OAAjE,CAAN;AAWA,YAAMoB,cAAc,GAAG7B,SAAS,CAACgB,MAAV,CAAkBC,KAAD,IAAWA,KAAK,CAACd,EAAN,KAAaA,EAAzC,CAAvB;AACAQ,MAAAA,aAAa,CAAC,GAAD,CAAb;AACAE,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAX,MAAAA,YAAY,CAAC2B,cAAD,CAAZ;AACH,KAhBD,CAgBE,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GApBD,CA1CqI,CAgErI;;;AACA,QAAMO,kBAAkB,GAAIvB,YAAD,IAAkB;AACzC,QAAIA,YAAY,IAAI,GAApB,EAAyB;AACrB,0BAAO;AAAM,QAAA,KAAK,EAAE;AAACwB,UAAAA,UAAU,EAAE,QAAb;AAAuBC,UAAAA,OAAO,EAAE,KAAhC;AAAuCC,UAAAA,KAAK,EAAE,OAA9C;AAAuDC,UAAAA,MAAM,EAAE;AAA/D,SAAb;AAAA,kBAAkG3B;AAAlG;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,IAAIA,YAAY,GAAG,GAAf,IAAsBA,YAAY,IAAI,CAA1C,EAA6C;AAChD,0BAAO;AAAM,QAAA,KAAK,EAAE;AAACwB,UAAAA,UAAU,EAAE,QAAb;AAAuBC,UAAAA,OAAO,EAAE,KAAhC;AAAuCC,UAAAA,KAAK,EAAE,QAA9C;AAAwDC,UAAAA,MAAM,EAAE;AAAhE,SAAb;AAAA,kBAAmG3B;AAAnG;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAEA;AACH,0BAAO;AAAM,QAAA,KAAK,EAAE;AAACwB,UAAAA,UAAU,EAAE,QAAb;AAAuBC,UAAAA,OAAO,EAAE,KAAhC;AAAuCC,UAAAA,KAAK,EAAE,KAA9C;AAAqDC,UAAAA,MAAM,EAAE;AAA7D,SAAb;AAAA,kBAAgG3B;AAAhG;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ,GARD,CAjEqI,CA2ErI;;;AACA,sBACI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA,4BACI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAoB,MAAA,GAAG,EAAEV,OAAO,GAAGQ,WAAnC;AAAgD,MAAA,GAAG,EAAED;AAArD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA,8BACI;AAAA,+BAAI;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,KAAK,EAAE;AAAC+B,UAAAA,UAAU,EAAE;AAAb,SAAV;AAAA,mBACK,IAAIC,IAAJ,CAAS3B,YAAT,EAAuB4B,cAAvB,CAAsC,OAAtC,EAA+C;AAAEC,UAAAA,QAAQ,EAAE,KAAZ;AAAmBC,UAAAA,IAAI,EAAE,SAAzB;AAAoCC,UAAAA,KAAK,EAAE,MAA3C;AAAmDC,UAAAA,GAAG,EAAE;AAAxD,SAA/C,CADL,EAEKX,kBAAkB,CAACvB,YAAD,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAyB,QAAA,OAAO,EAAGK,WAAW,GAAGc,wBAAH,GAA8BP,mBAA5E;AAAA,kBAAoGT;AAApG;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAzFD;;GAAMZ,S;;KAAAA,S;AA2FN,eAAeA,SAAf","sourcesContent":["import '../styles/MovieCard.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nconst MovieCard = ({user, watchlist, movies, setWatchlist, id, title, poster_path, overview, vote_average, vote_count, release_date}) => {\r\n    const [buttonText, setButtonText] = useState('+');\r\n    const [inWatchlist, setInWatchlist] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // checks if the movie is in the user's watchlist\r\n        const isMovieInWatchlist = () => {\r\n            const result = watchlist.filter(movie => (movie.id === id))\r\n            if (result.length > 0 || inWatchlist) {\r\n                setButtonText('-');\r\n                setInWatchlist(true);\r\n            } else {\r\n                setButtonText('+');\r\n                setInWatchlist(false);\r\n            }\r\n        }\r\n\r\n        isMovieInWatchlist(); // eslint-disable-next-line\r\n    }, [watchlist, movies]);\r\n\r\n   // Adds a movie to the user's watchlist\r\n    const addMovieToWatchlist = async () => {   \r\n        let movie;\r\n        try {\r\n            movie = await axios.post(`/users/${user.sub.substring(6)}/watchlist/add`, {\r\n                id,\r\n                title,\r\n                poster_path,\r\n                overview,\r\n                vote_average,\r\n                vote_count,\r\n                release_date,\r\n            });\r\n            setButtonText('-');\r\n            setInWatchlist(true);\r\n            setWatchlist([...watchlist, movie]);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // Deletes a movie from the user's watchlist\r\n    const removeMovieFromWatchlist = async () => {\r\n        try {\r\n            await axios.delete(`/users/${user.sub.substring(6)}/watchlist/remove`, {\r\n                data: {\r\n                    id,\r\n                    title,\r\n                    poster_path,\r\n                    overview,\r\n                    vote_average,\r\n                    vote_count,\r\n                    release_date,\r\n                }\r\n            });\r\n            const filteredMovies = watchlist.filter((movie) => movie.id !== id);\r\n            setButtonText('+');\r\n            setInWatchlist(false);\r\n            setWatchlist(filteredMovies);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // displays the vote average\r\n    const displayVoteAverage = (vote_average) => {\r\n        if (vote_average >= 7.5) {\r\n            return <span style={{marginLeft: '1.5rem', padding: '5px', color: 'green', border: '1px solid black'}}>{ vote_average }</span>\r\n        } else if (vote_average < 7.5 && vote_average >= 5) {\r\n            return <span style={{marginLeft: '1.5rem', padding: '5px', color: 'orange', border: '1px solid black'}}>{ vote_average }</span>\r\n        } else {\r\n            return <span style={{marginLeft: '1.5rem', padding: '5px', color: 'red', border: '1px solid black'}}>{ vote_average }</span>\r\n        }\r\n    }\r\n\r\n    // determines if a movie is currently in the watchlist\r\n    return (\r\n        <div id=\"movie\">\r\n            <img id=\"movie-img\" src={IMG_API + poster_path} alt={title} />\r\n            <div id=\"movie-info\">\r\n                <h6><b>{ title }</b></h6>\r\n                <p style={{paddingTop: '0.5rem'}}>\r\n                    {new Date(release_date).toLocaleString('en-us', { timeZone: 'UTC', year: 'numeric', month: 'long', day: 'numeric' })} \r\n                    {displayVoteAverage(vote_average)}\r\n                </p>\r\n                <Button variant=\"danger\" onClick={ inWatchlist ? removeMovieFromWatchlist : addMovieToWatchlist }>{ buttonText }</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieCard;"]},"metadata":{},"sourceType":"module"}