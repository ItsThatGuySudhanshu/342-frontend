{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudha\\\\Desktop\\\\NCSU\\\\Junior Year NCSU\\\\CSC 342\\\\WEBAPPS-02\\\\client\\\\src\\\\components\\\\Movies.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/Movies.css';\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\nimport MovieDatabase from './MovieContainer';\nimport Search from './Search';\nimport Sort from './Sort';\nimport Filter from './Filter';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = ({\n  user\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [database, setDatabase] = useState([]);\n  const [watchlist, setWatchlist] = useState([]); // Calls fetchMovieData once when the component renders\n\n  useEffect(() => {\n    // Fetches the movies for the database and the user's watchlist\n    const fetchMovieData = async () => {\n      try {\n        setLoading(true);\n        const databaseResponse = await axios.get('/movies');\n        setDatabase(databaseResponse.data);\n        const watchlistResponse = await axios.get(`/users/${user.sub.substring(6)}/watchlist`);\n        setWatchlist(watchlistResponse.data);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchMovieData(); // eslint-disable-next-line\n  }, []); // Render the spinner when the page is loading\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5 pt-5\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        size: \"lg\",\n        role: \"status\",\n        style: {\n          color: '#CC0000',\n          width: '5rem',\n          height: '5rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"movie-page\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 2,\n        children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Sort, {\n          movies: database,\n          setMovies: setDatabase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Filter, {\n          movies: database,\n          watchlist: watchlist,\n          setMovies: setDatabase,\n          setWatchlist: setWatchlist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 10,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"container-border\",\n          children: /*#__PURE__*/_jsxDEV(MovieDatabase, {\n            movies: database,\n            watchlist: watchlist,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movies, \"cMg9tPC/UAQJSD7tFbbgR/W+0VE=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["C:/Users/sudha/Desktop/NCSU/Junior Year NCSU/CSC 342/WEBAPPS-02/client/src/components/Movies.js"],"names":["Container","Row","Col","Spinner","MovieDatabase","Search","Sort","Filter","useState","useEffect","axios","Movies","user","loading","setLoading","database","setDatabase","watchlist","setWatchlist","fetchMovieData","databaseResponse","get","data","watchlistResponse","sub","substring","err","console","log","color","width","height"],"mappings":"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","sourcesContent":["import '../styles/Movies.css';\r\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\r\nimport MovieDatabase from './MovieContainer';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\nimport Filter from './Filter';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Movies = ({user}) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [database, setDatabase] = useState([]);\r\n    const [watchlist, setWatchlist] = useState([]);\r\n\r\n    // Calls fetchMovieData once when the component renders\r\n    useEffect(() => {\r\n        // Fetches the movies for the database and the user's watchlist\r\n        const fetchMovieData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const databaseResponse = await axios.get('/movies');\r\n                setDatabase(databaseResponse.data);\r\n                const watchlistResponse = await axios.get(`/users/${user.sub.substring(6)}/watchlist`);\r\n                setWatchlist(watchlistResponse.data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n\r\n        fetchMovieData(); // eslint-disable-next-line\r\n    }, []);\r\n\r\n    // Render the spinner when the page is loading\r\n    if (loading) {\r\n        return (\r\n            <div className=\"text-center mt-5 pt-5\" >\r\n                <Spinner animation=\"border\" size=\"lg\" role=\"status\" style={{ color: '#CC0000', width: '5rem', height: '5rem' }}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"movie-page\">\r\n            <Row>\r\n                <Col xs={2}>\r\n                    <Search />\r\n                    <Sort movies={database} setMovies={setDatabase} />\r\n                    <Filter movies={database} watchlist={watchlist} setMovies={setDatabase} setWatchlist={setWatchlist} />\r\n                </Col>\r\n                <Col xs={10}>\r\n                    <div id=\"container-border\">\r\n                        <MovieDatabase movies={database} watchlist={watchlist} user={user} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}