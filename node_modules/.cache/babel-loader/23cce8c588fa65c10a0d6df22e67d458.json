{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudha\\\\Desktop\\\\NCSU\\\\Junior Year NCSU\\\\CSC 342\\\\WEBAPPS-02\\\\client\\\\src\\\\components\\\\Watchlist.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/Watchlist.css';\nimport Search from './Search';\nimport Sort from './Sort';\nimport MovieWatchlist from './MovieContainer';\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Watchlist = ({\n  user,\n  movies\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [watchlist, setWatchlist] = useState([]); // Calls fetchMovieData once when the component renders\n\n  useEffect(() => {\n    // Fetches the movies for the database and the user's watchlist\n    const fetchMovieData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`/users/${user.sub.substring(6)}/watchlist`);\n        setWatchlist(response.data);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchMovieData(); // eslint-disable-next-line\n  }, []); // Render the spinner while the page is loading\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5 pt-5\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        size: \"lg\",\n        role: \"status\",\n        style: {\n          color: '#CC0000',\n          width: '5rem',\n          height: '5rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"watchlist-container\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 3,\n        id: \"filter-container\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Sort, {\n          movies: watchlist,\n          setWatchlist: sortedMovies => setWatchlist([...sortedMovies])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 8,\n        id: \"movie-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"watchlistTitle\",\n          children: \"My Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MovieWatchlist, {\n          movies: watchlist,\n          watchlist: watchlist,\n          setWatchlist: setWatchlist,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Watchlist, \"pfA48Rz5T9hxrwhE4RISYHmS5FQ=\");\n\n_c = Watchlist;\nexport default Watchlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Watchlist\");","map":{"version":3,"sources":["C:/Users/sudha/Desktop/NCSU/Junior Year NCSU/CSC 342/WEBAPPS-02/client/src/components/Watchlist.js"],"names":["Search","Sort","MovieWatchlist","Container","Row","Col","Spinner","useState","useEffect","axios","Watchlist","user","movies","loading","setLoading","watchlist","setWatchlist","fetchMovieData","response","get","sub","substring","data","err","console","log","color","width","height","sortedMovies"],"mappings":"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","sourcesContent":["import '../styles/Watchlist.css';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\nimport MovieWatchlist from './MovieContainer'\r\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Watchlist = ({user, movies}) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [watchlist, setWatchlist] = useState([]);\r\n\r\n    // Calls fetchMovieData once when the component renders\r\n    useEffect(() => {\r\n        // Fetches the movies for the database and the user's watchlist\r\n        const fetchMovieData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await axios.get(`/users/${user.sub.substring(6)}/watchlist`);\r\n                setWatchlist(response.data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n\r\n        fetchMovieData(); // eslint-disable-next-line\r\n    }, []);\r\n\r\n    // Render the spinner while the page is loading\r\n    if (loading) {\r\n        return (\r\n            <div className=\"text-center mt-5 pt-5\" >\r\n                <Spinner animation=\"border\" size=\"lg\" role=\"status\" style={{ color: '#CC0000', width: '5rem', height: '5rem' }}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"watchlist-container\">\r\n            <Row>\r\n                <Col xs={3} id=\"filter-container\">\r\n                    <Search />\r\n                    <Sort movies={watchlist} setWatchlist={sortedMovies => setWatchlist([...sortedMovies])}/>\r\n                </Col>\r\n                <Col xs={8} id=\"movie-container\">\r\n                    <h1 id='watchlistTitle'>My Watchlist</h1>\r\n                    <MovieWatchlist movies={watchlist} watchlist={watchlist} setWatchlist={setWatchlist} user={user} />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Watchlist;"]},"metadata":{},"sourceType":"module"}