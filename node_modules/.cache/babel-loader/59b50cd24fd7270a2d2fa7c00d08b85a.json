{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/sudha/Desktop/NCSU/Junior Year NCSU/CSC 342/342-frontend-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"C:/Users/sudha/Desktop/NCSU/Junior Year NCSU/CSC 342/342-frontend-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"C:/Users/sudha/Desktop/NCSU/Junior Year NCSU/CSC 342/342-frontend-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/sudha/Desktop/NCSU/Junior Year NCSU/CSC 342/342-frontend-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'../styles/MovieCard.css';import React,{useState,useEffect}from'react';import axios from'axios';import{Button}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var IMG_API=\"https://image.tmdb.org/t/p/w1280\";var MovieCard=function MovieCard(_ref){var user=_ref.user,watchlist=_ref.watchlist,movies=_ref.movies,setWatchlist=_ref.setWatchlist,id=_ref.id,title=_ref.title,poster_path=_ref.poster_path,overview=_ref.overview,vote_average=_ref.vote_average,vote_count=_ref.vote_count,release_date=_ref.release_date,popularity=_ref.popularity;var _useState=useState('+'),_useState2=_slicedToArray(_useState,2),buttonText=_useState2[0],setButtonText=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),inWatchlist=_useState4[0],setInWatchlist=_useState4[1];useEffect(function(){// checks if the movie is in the user's watchlist\nvar isMovieInWatchlist=function isMovieInWatchlist(){var result=watchlist.filter(function(movie){return movie.id===id;});if(result.length>0||inWatchlist){setButtonText('-');setInWatchlist(true);}else{setButtonText('+');setInWatchlist(false);}};isMovieInWatchlist();// eslint-disable-next-line\n},[watchlist,movies]);// Adds a movie to the user's watchlist\nvar addMovieToWatchlist=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var movie;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post(\"/users/\".concat(user.sub.substring(6),\"/watchlist/add\"),{id:id,title:title,poster_path:poster_path,overview:overview,vote_average:vote_average,vote_count:vote_count,release_date:release_date,popularity:popularity});case 3:movie=_context.sent;setButtonText('-');setInWatchlist(true);setWatchlist([].concat(_toConsumableArray(watchlist),[movie]));_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function addMovieToWatchlist(){return _ref2.apply(this,arguments);};}();// Deletes a movie from the user's watchlist\nvar removeMovieFromWatchlist=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var filteredMovies;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.delete(\"/users/\".concat(user.sub.substring(6),\"/watchlist/remove\"),{data:{id:id,title:title,poster_path:poster_path,overview:overview,vote_average:vote_average,vote_count:vote_count,release_date:release_date,popularity:popularity}});case 3:filteredMovies=watchlist.filter(function(movie){return movie.id!==id;});setButtonText('+');setInWatchlist(false);setWatchlist(filteredMovies);_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function removeMovieFromWatchlist(){return _ref3.apply(this,arguments);};}();// displays the vote average\nvar displayVoteAverage=function displayVoteAverage(vote_average){if(vote_average>=7.5){return/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'1.5rem',padding:'5px',color:'green',border:'1px solid black'},children:vote_average});}else if(vote_average<7.5&&vote_average>=5){return/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'1.5rem',padding:'5px',color:'orange',border:'1px solid black'},children:vote_average});}else{return/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'1.5rem',padding:'5px',color:'red',border:'1px solid black'},children:vote_average});}};// determines if a movie is currently in the watchlist\nreturn/*#__PURE__*/_jsxs(\"div\",{id:\"movie\",children:[/*#__PURE__*/_jsx(\"img\",{id:\"movie-img\",src:IMG_API+poster_path,alt:title}),/*#__PURE__*/_jsxs(\"div\",{id:\"movie-info\",children:[/*#__PURE__*/_jsx(\"h6\",{children:/*#__PURE__*/_jsx(\"b\",{children:title})}),/*#__PURE__*/_jsxs(\"p\",{style:{paddingTop:'0.5rem'},children:[new Date(release_date).toLocaleString('en-us',{timeZone:'UTC',year:'numeric',month:'long',day:'numeric'}),displayVoteAverage(vote_average)]}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:inWatchlist?removeMovieFromWatchlist:addMovieToWatchlist,children:buttonText})]})]});};export default MovieCard;","map":{"version":3,"sources":["C:/Users/sudha/Desktop/NCSU/Junior Year NCSU/CSC 342/342-frontend-2/src/components/MovieCard.js"],"names":["React","useState","useEffect","axios","Button","IMG_API","MovieCard","user","watchlist","movies","setWatchlist","id","title","poster_path","overview","vote_average","vote_count","release_date","popularity","buttonText","setButtonText","inWatchlist","setInWatchlist","isMovieInWatchlist","result","filter","movie","length","addMovieToWatchlist","post","sub","substring","console","log","removeMovieFromWatchlist","delete","data","filteredMovies","displayVoteAverage","marginLeft","padding","color","border","paddingTop","Date","toLocaleString","timeZone","year","month","day"],"mappings":"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","sourcesContent":["import '../styles/MovieCard.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nconst MovieCard = ({user, watchlist, movies, setWatchlist, id, title, poster_path, overview, vote_average, vote_count, release_date, popularity}) => {\r\n    const [buttonText, setButtonText] = useState('+');\r\n    const [inWatchlist, setInWatchlist] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // checks if the movie is in the user's watchlist\r\n        const isMovieInWatchlist = () => {\r\n            const result = watchlist.filter(movie => (movie.id === id))\r\n            if (result.length > 0 || inWatchlist) {\r\n                setButtonText('-');\r\n                setInWatchlist(true);\r\n            } else {\r\n                setButtonText('+');\r\n                setInWatchlist(false);\r\n            }\r\n        }\r\n\r\n        isMovieInWatchlist(); // eslint-disable-next-line\r\n    }, [watchlist, movies]);\r\n\r\n   // Adds a movie to the user's watchlist\r\n    const addMovieToWatchlist = async () => {   \r\n        let movie;\r\n        try {\r\n            movie = await axios.post(`/users/${user.sub.substring(6)}/watchlist/add`, {\r\n                id,\r\n                title,\r\n                poster_path,\r\n                overview,\r\n                vote_average,\r\n                vote_count,\r\n                release_date,\r\n                popularity\r\n            });\r\n            setButtonText('-');\r\n            setInWatchlist(true);\r\n            setWatchlist([...watchlist, movie]);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // Deletes a movie from the user's watchlist\r\n    const removeMovieFromWatchlist = async () => {\r\n        try {\r\n            await axios.delete(`/users/${user.sub.substring(6)}/watchlist/remove`, {\r\n                data: {\r\n                    id,\r\n                    title,\r\n                    poster_path,\r\n                    overview,\r\n                    vote_average,\r\n                    vote_count,\r\n                    release_date,\r\n                    popularity\r\n                }\r\n            });\r\n            const filteredMovies = watchlist.filter((movie) => movie.id !== id);\r\n            setButtonText('+');\r\n            setInWatchlist(false);\r\n            setWatchlist(filteredMovies);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // displays the vote average\r\n    const displayVoteAverage = (vote_average) => {\r\n        if (vote_average >= 7.5) {\r\n            return <span style={{marginLeft: '1.5rem', padding: '5px', color: 'green', border: '1px solid black'}}>{ vote_average }</span>\r\n        } else if (vote_average < 7.5 && vote_average >= 5) {\r\n            return <span style={{marginLeft: '1.5rem', padding: '5px', color: 'orange', border: '1px solid black'}}>{ vote_average }</span>\r\n        } else {\r\n            return <span style={{marginLeft: '1.5rem', padding: '5px', color: 'red', border: '1px solid black'}}>{ vote_average }</span>\r\n        }\r\n    }\r\n\r\n    // determines if a movie is currently in the watchlist\r\n    return (\r\n        <div id=\"movie\">\r\n            <img id=\"movie-img\" src={IMG_API + poster_path} alt={title} />\r\n            <div id=\"movie-info\">\r\n                <h6><b>{ title }</b></h6>\r\n                <p style={{paddingTop: '0.5rem'}}>\r\n                    {new Date(release_date).toLocaleString('en-us', { timeZone: 'UTC', year: 'numeric', month: 'long', day: 'numeric' })} \r\n                    {displayVoteAverage(vote_average)}\r\n                </p>\r\n                <Button variant=\"danger\" onClick={ inWatchlist ? removeMovieFromWatchlist : addMovieToWatchlist }>{ buttonText }</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieCard;"]},"metadata":{},"sourceType":"module"}